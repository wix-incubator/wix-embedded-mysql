package com.wix.mysql;

import com.wix.mysql.distribution.Version;
import de.flapdoodle.embed.process.config.store.FileSet;
import de.flapdoodle.embed.process.config.store.IPackageResolver;
import de.flapdoodle.embed.process.distribution.ArchiveType;
import de.flapdoodle.embed.process.distribution.BitSize;
import de.flapdoodle.embed.process.distribution.Distribution;
import de.flapdoodle.embed.process.distribution.IVersion;

import static de.flapdoodle.embed.process.config.store.FileType.Executable;
import static de.flapdoodle.embed.process.config.store.FileType.Library;
import static de.flapdoodle.embed.process.distribution.ArchiveType.TGZ;
import static de.flapdoodle.embed.process.distribution.ArchiveType.ZIP;
import static de.flapdoodle.embed.process.distribution.BitSize.B32;
import static java.lang.String.format;

/**
 * @author viliusl
 * @since 27/09/14
 */
public class PackagePaths implements IPackageResolver {
    @Override
    public FileSet getFileSet(Distribution distribution) {
        switch (distribution.getPlatform()) {
            case Windows:
                return buildWindowsFileSet((Version) distribution.getVersion());
            default:
                return buildNixFileSet((Version) distribution.getVersion());
        }
    }

    private FileSet buildWindowsFileSet(Version version) {
        FileSet.Builder builder = FileSet.builder();
        if (version.getMajorVersion().equals("5.7")) {
            builder
                    .addEntry(Executable, "bin/mysqld.exe")
                    .addEntry(Library, "bin/echo.exe")
                    .addEntry(Library, "bin/innochecksum.exe")
                    .addEntry(Library, "bin/libmecab.dll")
                    .addEntry(Library, "bin/lz4_decompress.exe")
                    .addEntry(Library, "bin/msvcp120.dll")
                    .addEntry(Library, "bin/msvcr120.dll")
                    .addEntry(Library, "bin/my_print_defaults.exe")
                    .addEntry(Library, "bin/myisam_ftdump.exe")
                    .addEntry(Library, "bin/myisamchk.exe")
                    .addEntry(Library, "bin/myisamlog.exe")
                    .addEntry(Library, "bin/myisampack.exe")
                    .addEntry(Library, "bin/mysql.exe")
                    .addEntry(Library, "bin/mysql_client_test_embedded.exe")
                    .addEntry(Library, "bin/mysql_config.pl")
                    .addEntry(Library, "bin/mysql_config_editor.exe")
                    .addEntry(Library, "bin/mysql_embedded.exe")
                    .addEntry(Library, "bin/mysql_plugin.exe")
                    .addEntry(Library, "bin/mysql_secure_installation.exe")
                    .addEntry(Library, "bin/mysql_ssl_rsa_setup.exe")
                    .addEntry(Library, "bin/mysql_tzinfo_to_sql.exe")
                    .addEntry(Library, "bin/mysql_upgrade.exe")
                    .addEntry(Library, "bin/mysqladmin.exe")
                    .addEntry(Library, "bin/mysqlbinlog.exe")
                    .addEntry(Library, "bin/mysqlcheck.exe")
                    .addEntry(Library, "bin/mysqld.pdb")
                    .addEntry(Library, "bin/mysqld_multi.pl")
                    .addEntry(Library, "bin/mysqldump.exe")
                    .addEntry(Library, "bin/mysqldumpslow.pl")
                    .addEntry(Library, "bin/mysqlimport.exe")
                    .addEntry(Library, "bin/mysqlpump.exe")
                    .addEntry(Library, "bin/mysqlshow.exe")
                    .addEntry(Library, "bin/mysqlslap.exe")
                    .addEntry(Library, "bin/mysqltest_embedded.exe")
                    .addEntry(Library, "bin/perror.exe")
                    .addEntry(Library, "bin/replace.exe")
                    .addEntry(Library, "bin/resolveip.exe")
                    .addEntry(Library, "bin/zlib_decompress.exe")
//                    .addEntry(Library, "COPYING")
//                    .addEntry(Library, "docs/ChangeLog")
//                    .addEntry(Library, "docs/INFO_BIN")
//                    .addEntry(Library, "docs/INFO_SRC")
//                    .addEntry(Library, "include/big_endian.h")
//                    .addEntry(Library, "include/binary_log_types.h")
//                    .addEntry(Library, "include/byte_order_generic.h")
//                    .addEntry(Library, "include/byte_order_generic_x86.h")
//                    .addEntry(Library, "include/decimal.h")
//                    .addEntry(Library, "include/errmsg.h")
//                    .addEntry(Library, "include/keycache.h")
//                    .addEntry(Library, "include/little_endian.h")
//                    .addEntry(Library, "include/m_ctype.h")
//                    .addEntry(Library, "include/m_string.h")
//                    .addEntry(Library, "include/my_alloc.h")
//                    .addEntry(Library, "include/my_byteorder.h")
//                    .addEntry(Library, "include/my_command.h")
//                    .addEntry(Library, "include/my_compiler.h")
//                    .addEntry(Library, "include/my_config.h")
//                    .addEntry(Library, "include/my_dbug.h")
//                    .addEntry(Library, "include/my_dir.h")
//                    .addEntry(Library, "include/my_getopt.h")
//                    .addEntry(Library, "include/my_global.h")
//                    .addEntry(Library, "include/my_list.h")
//                    .addEntry(Library, "include/my_sys.h")
//                    .addEntry(Library, "include/my_thread.h")
//                    .addEntry(Library, "include/my_thread_local.h")
//                    .addEntry(Library, "include/my_xml.h")
//                    .addEntry(Library, "include/mysql/client_authentication.h")
//                    .addEntry(Library, "include/mysql/client_plugin.h")
//                    .addEntry(Library, "include/mysql/client_plugin.h.pp")
//                    .addEntry(Library, "include/mysql/com_data.h")
//                    .addEntry(Library, "include/mysql/get_password.h")
//                    .addEntry(Library, "include/mysql/group_replication_priv.h")
//                    .addEntry(Library, "include/mysql/innodb_priv.h")
//                    .addEntry(Library, "include/mysql/mysql_lex_string.h")
//                    .addEntry(Library, "include/mysql/plugin.h")
//                    .addEntry(Library, "include/mysql/plugin_audit.h")
//                    .addEntry(Library, "include/mysql/plugin_audit.h.pp")
//                    .addEntry(Library, "include/mysql/plugin_auth.h")
//                    .addEntry(Library, "include/mysql/plugin_auth.h.pp")
//                    .addEntry(Library, "include/mysql/plugin_auth_common.h")
//                    .addEntry(Library, "include/mysql/plugin_ftparser.h")
//                    .addEntry(Library, "include/mysql/plugin_ftparser.h.pp")
//                    .addEntry(Library, "include/mysql/plugin_group_replication.h")
//                    .addEntry(Library, "include/mysql/plugin_trace.h")
//                    .addEntry(Library, "include/mysql/plugin_validate_password.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_file.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_idle.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_mdl.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_memory.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_ps.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_socket.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_sp.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_stage.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_statement.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_table.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_thread.h")
//                    .addEntry(Library, "include/mysql/psi/mysql_transaction.h")
//                    .addEntry(Library, "include/mysql/psi/psi.h")
//                    .addEntry(Library, "include/mysql/psi/psi_base.h")
//                    .addEntry(Library, "include/mysql/psi/psi_memory.h")
//                    .addEntry(Library, "include/mysql/service_command.h")
//                    .addEntry(Library, "include/mysql/service_locking.h")
//                    .addEntry(Library, "include/mysql/service_my_plugin_log.h")
//                    .addEntry(Library, "include/mysql/service_my_snprintf.h")
//                    .addEntry(Library, "include/mysql/service_mysql_alloc.h")
//                    .addEntry(Library, "include/mysql/service_mysql_password_policy.h")
//                    .addEntry(Library, "include/mysql/service_mysql_string.h")
//                    .addEntry(Library, "include/mysql/service_parser.h")
//                    .addEntry(Library, "include/mysql/service_rpl_transaction_ctx.h")
//                    .addEntry(Library, "include/mysql/service_rpl_transaction_write_set.h")
//                    .addEntry(Library, "include/mysql/service_rules_table.h")
//                    .addEntry(Library, "include/mysql/service_security_context.h")
//                    .addEntry(Library, "include/mysql/service_srv_session.h")
//                    .addEntry(Library, "include/mysql/service_srv_session_info.h")
//                    .addEntry(Library, "include/mysql/service_thd_alloc.h")
//                    .addEntry(Library, "include/mysql/service_thd_engine_lock.h")
//                    .addEntry(Library, "include/mysql/service_thd_wait.h")
//                    .addEntry(Library, "include/mysql/service_thread_scheduler.h")
//                    .addEntry(Library, "include/mysql/services.h")
//                    .addEntry(Library, "include/mysql/services.h.pp")
//                    .addEntry(Library, "include/mysql/thread_pool_priv.h")
//                    .addEntry(Library, "include/mysql/thread_type.h")
//                    .addEntry(Library, "include/mysql.h")
//                    .addEntry(Library, "include/mysql_com.h")
//                    .addEntry(Library, "include/mysql_com_server.h")
//                    .addEntry(Library, "include/mysql_embed.h")
//                    .addEntry(Library, "include/mysql_time.h")
//                    .addEntry(Library, "include/mysql_version.h")
//                    .addEntry(Library, "include/mysqld_ername.h")
//                    .addEntry(Library, "include/mysqld_error.h")
//                    .addEntry(Library, "include/plugin.h")
//                    .addEntry(Library, "include/plugin_audit.h")
//                    .addEntry(Library, "include/plugin_ftparser.h")
//                    .addEntry(Library, "include/plugin_group_replication.h")
//                    .addEntry(Library, "include/plugin_validate_password.h")
//                    .addEntry(Library, "include/sql_common.h")
//                    .addEntry(Library, "include/sql_state.h")
//                    .addEntry(Library, "include/sslopt-case.h")
//                    .addEntry(Library, "include/sslopt-longopts.h")
//                    .addEntry(Library, "include/sslopt-vars.h")
//                    .addEntry(Library, "include/thr_cond.h")
//                    .addEntry(Library, "include/thr_mutex.h")
//                    .addEntry(Library, "include/thr_rwlock.h")
//                    .addEntry(Library, "include/typelib.h")
//                    .addEntry(Library, "lib/libmysql.dll")
//                    .addEntry(Library, "lib/libmysql.lib")
//                    .addEntry(Library, "lib/libmysqld.dll")
//                    .addEntry(Library, "lib/libmysqld.lib")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/char.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/dicrc")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/left-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/matrix.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/pos-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/rewrite.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/right-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/sys.dic")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_euc-jp/unk.dic")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/char.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/dicrc")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/left-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/matrix.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/pos-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/rewrite.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/right-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/sys.dic")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_sjis/unk.dic")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/char.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/dicrc")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/left-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/matrix.bin")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/pos-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/rewrite.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/right-id.def")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/sys.dic")
//                    .addEntry(Library, "lib/mecab/dic/ipadic_utf-8/unk.dic")
//                    .addEntry(Library, "lib/mecab/etc/mecabrc")
//                    .addEntry(Library, "lib/mysqlclient.lib")
//                    .addEntry(Library, "lib/mysqlserver.lib")
//                    .addEntry(Library, "lib/mysqlservices.lib")
//                    .addEntry(Library, "lib/plugin/adt_null.dll")
//                    .addEntry(Library, "lib/plugin/debug/adt_null.dll")
//                    .addEntry(Library, "lib/plugin/debug/adt_null.pdb")
//                    .addEntry(Library, "lib/plugin/debug/ha_example.dll")
//                    .addEntry(Library, "lib/plugin/debug/ha_example.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libpluginmecab.dll")
//                    .addEntry(Library, "lib/plugin/debug/libpluginmecab.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_framework.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_framework.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_services.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_services.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_services_threaded.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_services_threaded.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_detach.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_detach.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_in_thd.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_in_thd.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_info.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_session_info.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_2_sessions.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_2_sessions.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_all_col_types.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_all_col_types.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_cmds_1.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_cmds_1.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_commit.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_commit.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_complex.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_complex.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_errors.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_errors.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_lock.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_lock.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_processlist.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_processlist.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_replication.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_replication.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_shutdown.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_shutdown.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_sqlmode.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_sqlmode.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_stored_procedures_functions.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_stored_procedures_functions.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_views_triggers.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_sql_views_triggers.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_x_sessions_deinit.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_x_sessions_deinit.pdb")
//                    .addEntry(Library, "lib/plugin/debug/libtest_x_sessions_init.dll")
//                    .addEntry(Library, "lib/plugin/debug/libtest_x_sessions_init.pdb")
//                    .addEntry(Library, "lib/plugin/debug/locking_service.dll")
//                    .addEntry(Library, "lib/plugin/debug/locking_service.pdb")
//                    .addEntry(Library, "lib/plugin/debug/mypluglib.dll")
//                    .addEntry(Library, "lib/plugin/debug/mypluglib.pdb")
//                    .addEntry(Library, "lib/plugin/debug/mysql_no_login.dll")
//                    .addEntry(Library, "lib/plugin/debug/mysql_no_login.pdb")
//                    .addEntry(Library, "lib/plugin/debug/rewrite_example.dll")
//                    .addEntry(Library, "lib/plugin/debug/rewrite_example.pdb")
//                    .addEntry(Library, "lib/plugin/debug/rewriter.dll")
//                    .addEntry(Library, "lib/plugin/debug/rewriter.pdb")
//                    .addEntry(Library, "lib/plugin/debug/semisync_master.dll")
//                    .addEntry(Library, "lib/plugin/debug/semisync_master.pdb")
//                    .addEntry(Library, "lib/plugin/debug/semisync_slave.dll")
//                    .addEntry(Library, "lib/plugin/debug/semisync_slave.pdb")
//                    .addEntry(Library, "lib/plugin/debug/test_security_context.dll")
//                    .addEntry(Library, "lib/plugin/debug/test_security_context.pdb")
//                    .addEntry(Library, "lib/plugin/debug/validate_password.dll")
//                    .addEntry(Library, "lib/plugin/debug/validate_password.pdb")
//                    .addEntry(Library, "lib/plugin/debug/version_token.dll")
//                    .addEntry(Library, "lib/plugin/debug/version_token.pdb")
//                    .addEntry(Library, "lib/plugin/ha_example.dll")
//                    .addEntry(Library, "lib/plugin/libpluginmecab.dll")
//                    .addEntry(Library, "lib/plugin/libtest_framework.dll")
//                    .addEntry(Library, "lib/plugin/libtest_services.dll")
//                    .addEntry(Library, "lib/plugin/libtest_services_threaded.dll")
//                    .addEntry(Library, "lib/plugin/libtest_session_detach.dll")
//                    .addEntry(Library, "lib/plugin/libtest_session_in_thd.dll")
//                    .addEntry(Library, "lib/plugin/libtest_session_info.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_2_sessions.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_all_col_types.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_cmds_1.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_commit.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_complex.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_errors.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_lock.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_processlist.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_replication.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_shutdown.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_sqlmode.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_stored_procedures_functions.dll")
//                    .addEntry(Library, "lib/plugin/libtest_sql_views_triggers.dll")
//                    .addEntry(Library, "lib/plugin/libtest_x_sessions_deinit.dll")
//                    .addEntry(Library, "lib/plugin/libtest_x_sessions_init.dll")
//                    .addEntry(Library, "lib/plugin/locking_service.dll")
//                    .addEntry(Library, "lib/plugin/mypluglib.dll")
//                    .addEntry(Library, "lib/plugin/mysql_no_login.dll")
//                    .addEntry(Library, "lib/plugin/rewrite_example.dll")
//                    .addEntry(Library, "lib/plugin/rewriter.dll")
//                    .addEntry(Library, "lib/plugin/semisync_master.dll")
//                    .addEntry(Library, "lib/plugin/semisync_slave.dll")
//                    .addEntry(Library, "lib/plugin/test_security_context.dll")
//                    .addEntry(Library, "lib/plugin/validate_password.dll")
//                    .addEntry(Library, "lib/plugin/version_token.dll")
//                    .addEntry(Library, "my-default.ini")
//                    .addEntry(Library, "README")
//                    .addEntry(Library, "share/bulgarian/errmsg.sys")
//                    .addEntry(Library, "share/charsets/armscii8.xml")
//                    .addEntry(Library, "share/charsets/ascii.xml")
//                    .addEntry(Library, "share/charsets/cp1250.xml")
//                    .addEntry(Library, "share/charsets/cp1251.xml")
//                    .addEntry(Library, "share/charsets/cp1256.xml")
//                    .addEntry(Library, "share/charsets/cp1257.xml")
//                    .addEntry(Library, "share/charsets/cp850.xml")
//                    .addEntry(Library, "share/charsets/cp852.xml")
//                    .addEntry(Library, "share/charsets/cp866.xml")
//                    .addEntry(Library, "share/charsets/dec8.xml")
//                    .addEntry(Library, "share/charsets/geostd8.xml")
//                    .addEntry(Library, "share/charsets/greek.xml")
//                    .addEntry(Library, "share/charsets/hebrew.xml")
//                    .addEntry(Library, "share/charsets/hp8.xml")
//                    .addEntry(Library, "share/charsets/Index.xml")
//                    .addEntry(Library, "share/charsets/keybcs2.xml")
//                    .addEntry(Library, "share/charsets/koi8r.xml")
//                    .addEntry(Library, "share/charsets/koi8u.xml")
//                    .addEntry(Library, "share/charsets/latin1.xml")
//                    .addEntry(Library, "share/charsets/latin2.xml")
//                    .addEntry(Library, "share/charsets/latin5.xml")
//                    .addEntry(Library, "share/charsets/latin7.xml")
//                    .addEntry(Library, "share/charsets/macce.xml")
//                    .addEntry(Library, "share/charsets/macroman.xml")
//                    .addEntry(Library, "share/charsets/README")
//                    .addEntry(Library, "share/charsets/swe7.xml")
//                    .addEntry(Library, "share/czech/errmsg.sys")
//                    .addEntry(Library, "share/danish/errmsg.sys")
                    .addEntry(Library, "share/dictionary.txt")
//                    .addEntry(Library, "share/dutch/errmsg.sys")
                    .addEntry(Library, "share/english/errmsg.sys")
                    .addEntry(Library, "share/errmsg-utf8.txt")
//                    .addEntry(Library, "share/estonian/errmsg.sys")
                    .addEntry(Library, "share/fill_help_tables.sql")
//                    .addEntry(Library, "share/french/errmsg.sys")
//                    .addEntry(Library, "share/german/errmsg.sys")
//                    .addEntry(Library, "share/greek/errmsg.sys")
//                    .addEntry(Library, "share/hungarian/errmsg.sys")
                    .addEntry(Library, "share/innodb_memcached_config.sql")
//                    .addEntry(Library, "share/italian/errmsg.sys")
//                    .addEntry(Library, "share/japanese/errmsg.sys")
//                    .addEntry(Library, "share/korean/errmsg.sys")
                    .addEntry(Library, "share/mysql_security_commands.sql")
                    .addEntry(Library, "share/mysql_sys_schema.sql")
                    .addEntry(Library, "share/mysql_system_tables.sql")
                    .addEntry(Library, "share/mysql_system_tables_data.sql")
                    .addEntry(Library, "share/mysql_test_data_timezone.sql")
//                    .addEntry(Library, "share/norwegian/errmsg.sys")
//                    .addEntry(Library, "share/norwegian-ny/errmsg.sys")
//                    .addEntry(Library, "share/polish/errmsg.sys")
//                    .addEntry(Library, "share/portuguese/errmsg.sys")
//                    .addEntry(Library, "share/romanian/errmsg.sys")
//                    .addEntry(Library, "share/russian/errmsg.sys")
//                    .addEntry(Library, "share/serbian/errmsg.sys")
//                    .addEntry(Library, "share/slovak/errmsg.sys")
//                    .addEntry(Library, "share/spanish/errmsg.sys")
//                    .addEntry(Library, "share/swedish/errmsg.sys")
//                    .addEntry(Library, "share/ukrainian/errmsg.sys")
;
        } else {
            //TODO: just wow! Ok, need to think of a way to extend flapdoodle process library to support folders instead of individual files;
            // and discuss with flapdoodle people;
            builder
                    .addEntry(Executable, "bin/mysqld.exe")
                    .addEntry(Library, "bin/mysql.exe")
                    .addEntry(Library, "bin/resolveip.exe")
                    .addEntry(Library, "bin/mysqladmin.exe")
                    .addEntry(Library, "share/english/errmsg.sys")
                    .addEntry(Library, "data/test/db.opt")

                    .addEntry(Library, "data/ib_logfile0")
                    .addEntry(Library, "data/ib_logfile1")
                    .addEntry(Library, "data/ibdata1")

                    .addEntry(Library, "data/mysql/columns_priv.MYD")
                    .addEntry(Library, "data/mysql/columns_priv.MYI")
                    .addEntry(Library, "data/mysql/columns_priv.frm")
                    .addEntry(Library, "data/mysql/db.MYD")
                    .addEntry(Library, "data/mysql/db.MYI")
                    .addEntry(Library, "data/mysql/db.frm")
                    .addEntry(Library, "data/mysql/event.MYD")
                    .addEntry(Library, "data/mysql/event.MYI")
                    .addEntry(Library, "data/mysql/event.frm")
                    .addEntry(Library, "data/mysql/func.MYD")
                    .addEntry(Library, "data/mysql/func.MYI")
                    .addEntry(Library, "data/mysql/func.frm")
                    .addEntry(Library, "data/mysql/general_log.CSM")
                    .addEntry(Library, "data/mysql/general_log.CSV")
                    .addEntry(Library, "data/mysql/general_log.frm")
                    .addEntry(Library, "data/mysql/help_category.MYD")
                    .addEntry(Library, "data/mysql/help_category.MYI")
                    .addEntry(Library, "data/mysql/help_category.frm")
                    .addEntry(Library, "data/mysql/help_keyword.MYD")
                    .addEntry(Library, "data/mysql/help_keyword.MYI")
                    .addEntry(Library, "data/mysql/help_keyword.frm")
                    .addEntry(Library, "data/mysql/help_relation.MYD")
                    .addEntry(Library, "data/mysql/help_relation.MYI")
                    .addEntry(Library, "data/mysql/help_relation.frm")
                    .addEntry(Library, "data/mysql/help_topic.MYD")
                    .addEntry(Library, "data/mysql/help_topic.MYI")
                    .addEntry(Library, "data/mysql/help_topic.frm")
                    .addEntry(Library, "data/mysql/innodb_index_stats.frm")
                    .addEntry(Library, "data/mysql/innodb_index_stats.ibd")
                    .addEntry(Library, "data/mysql/innodb_table_stats.frm")
                    .addEntry(Library, "data/mysql/innodb_table_stats.ibd")
                    .addEntry(Library, "data/mysql/ndb_binlog_index.MYD")
                    .addEntry(Library, "data/mysql/ndb_binlog_index.MYI")
                    .addEntry(Library, "data/mysql/ndb_binlog_index.frm")
                    .addEntry(Library, "data/mysql/plugin.MYD")
                    .addEntry(Library, "data/mysql/plugin.MYI")
                    .addEntry(Library, "data/mysql/plugin.frm")
                    .addEntry(Library, "data/mysql/proc.MYD")
                    .addEntry(Library, "data/mysql/proc.MYI")
                    .addEntry(Library, "data/mysql/proc.frm")
                    .addEntry(Library, "data/mysql/procs_priv.MYD")
                    .addEntry(Library, "data/mysql/procs_priv.MYI")
                    .addEntry(Library, "data/mysql/procs_priv.frm")
                    .addEntry(Library, "data/mysql/proxies_priv.MYD")
                    .addEntry(Library, "data/mysql/proxies_priv.MYI")
                    .addEntry(Library, "data/mysql/proxies_priv.frm")
                    .addEntry(Library, "data/mysql/servers.MYD")
                    .addEntry(Library, "data/mysql/servers.MYI")
                    .addEntry(Library, "data/mysql/servers.frm")
                    .addEntry(Library, "data/mysql/slave_master_info.frm")
                    .addEntry(Library, "data/mysql/slave_master_info.ibd")
                    .addEntry(Library, "data/mysql/slave_relay_log_info.frm")
                    .addEntry(Library, "data/mysql/slave_relay_log_info.ibd")
                    .addEntry(Library, "data/mysql/slave_worker_info.frm")
                    .addEntry(Library, "data/mysql/slave_worker_info.ibd")
                    .addEntry(Library, "data/mysql/slow_log.CSM")
                    .addEntry(Library, "data/mysql/slow_log.CSV")
                    .addEntry(Library, "data/mysql/slow_log.frm")
                    .addEntry(Library, "data/mysql/tables_priv.MYD")
                    .addEntry(Library, "data/mysql/tables_priv.MYI")
                    .addEntry(Library, "data/mysql/tables_priv.frm")
                    .addEntry(Library, "data/mysql/time_zone.MYD")
                    .addEntry(Library, "data/mysql/time_zone.MYI")
                    .addEntry(Library, "data/mysql/time_zone.frm")
                    .addEntry(Library, "data/mysql/time_zone_leap_second.MYD")
                    .addEntry(Library, "data/mysql/time_zone_leap_second.MYI")
                    .addEntry(Library, "data/mysql/time_zone_leap_second.frm")
                    .addEntry(Library, "data/mysql/time_zone_name.MYD")
                    .addEntry(Library, "data/mysql/time_zone_name.MYI")
                    .addEntry(Library, "data/mysql/time_zone_name.frm")
                    .addEntry(Library, "data/mysql/time_zone_transition.MYD")
                    .addEntry(Library, "data/mysql/time_zone_transition.MYI")
                    .addEntry(Library, "data/mysql/time_zone_transition.frm")
                    .addEntry(Library, "data/mysql/time_zone_transition_type.MYD")
                    .addEntry(Library, "data/mysql/time_zone_transition_type.MYI")
                    .addEntry(Library, "data/mysql/time_zone_transition_type.frm")
                    .addEntry(Library, "data/mysql/user.MYD")
                    .addEntry(Library, "data/mysql/user.MYI")
                    .addEntry(Library, "data/mysql/user.frm")

                    .addEntry(Library, "data/performance_schema/accounts.frm")
                    .addEntry(Library, "data/performance_schema/cond_instances.frm")
                    .addEntry(Library, "data/performance_schema/db.opt")
                    .addEntry(Library, "data/performance_schema/events_stages_current.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_history.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_history_long.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_summary_by_account_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_summary_by_host_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_summary_by_thread_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_summary_by_user_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_stages_summary_global_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_current.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_history.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_history_long.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_by_account_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_by_digest.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_by_host_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_by_thread_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_by_user_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_statements_summary_global_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_current.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_history.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_history_long.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_by_account_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_by_host_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_by_instance.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_by_thread_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_by_user_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/events_waits_summary_global_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/file_instances.frm")
                    .addEntry(Library, "data/performance_schema/file_summary_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/file_summary_by_instance.frm")
                    .addEntry(Library, "data/performance_schema/host_cache.frm")
                    .addEntry(Library, "data/performance_schema/hosts.frm")
                    .addEntry(Library, "data/performance_schema/mutex_instances.frm")
                    .addEntry(Library, "data/performance_schema/objects_summary_global_by_type.frm")
                    .addEntry(Library, "data/performance_schema/performance_timers.frm")
                    .addEntry(Library, "data/performance_schema/rwlock_instances.frm")
                    .addEntry(Library, "data/performance_schema/session_account_connect_attrs.frm")
                    .addEntry(Library, "data/performance_schema/session_connect_attrs.frm")
                    .addEntry(Library, "data/performance_schema/setup_actors.frm")
                    .addEntry(Library, "data/performance_schema/setup_consumers.frm")
                    .addEntry(Library, "data/performance_schema/setup_instruments.frm")
                    .addEntry(Library, "data/performance_schema/setup_objects.frm")
                    .addEntry(Library, "data/performance_schema/setup_timers.frm")
                    .addEntry(Library, "data/performance_schema/socket_instances.frm")
                    .addEntry(Library, "data/performance_schema/socket_summary_by_event_name.frm")
                    .addEntry(Library, "data/performance_schema/socket_summary_by_instance.frm")
                    .addEntry(Library, "data/performance_schema/table_io_waits_summary_by_index_usage.frm")
                    .addEntry(Library, "data/performance_schema/table_io_waits_summary_by_table.frm")
                    .addEntry(Library, "data/performance_schema/table_lock_waits_summary_by_table.frm")
                    .addEntry(Library, "data/performance_schema/threads.frm")
                    .addEntry(Library, "data/performance_schema/users.frm");
        }

        //TODO: patch up process library to support multi-match pattern.
        //then we could just have regex and mark it as multi-match and no file-counting
        //as this one is dodgy especially when considering multiple versions etc.
        //for (int i = 0; i <= 3; i++)  { builder.addEntry(Library, "data/ib.*", "data/ib.*"); }
        //for (int i = 0; i <= 79; i++) { builder.addEntry(Library, "data/mysql/.*"); }
        //for (int i = 0; i <= 53; i++) { builder.addEntry(Library, "data/performance_schema/.*"); }

        return builder.build();
    }

    private FileSet buildNixFileSet(final Version version) {
        FileSet.Builder initial = FileSet.builder()
                .addEntry(Executable, "bin/mysqld")
                .addEntry(Library, "bin/mysql")
                .addEntry(Library, "bin/resolveip")
                .addEntry(Library, "bin/mysqladmin")
                .addEntry(Library, "bin/my_print_defaults")
                .addEntry(Library, "share/english/errmsg.sys")
                .addEntry(Library, "share/fill_help_tables.sql")
                .addEntry(Library, "share/mysql_system_tables.sql")
                .addEntry(Library, "share/mysql_system_tables_data.sql");


        if (!version.getMajorVersion().equals("5.5")) {
            initial.addEntry(Library, "share/mysql_security_commands.sql");//not available for 5.5
            initial.addEntry(Library, "support-files/my-default.cnf");
        }

        if (!version.getMajorVersion().equals("5.7")) {
            initial.addEntry(Library, "scripts/mysql_install_db");
        }

        return initial.build();
    }


    @Override
    public ArchiveType getArchiveType(Distribution distribution) {
        switch (distribution.getPlatform()) {
            case Windows:
                return ZIP;
            default:
                return TGZ;
        }
    }

    @Override
    public String getPath(Distribution distribution) {
        IVersion v = distribution.getVersion();
        BitSize bs = distribution.getBitsize();
        switch (distribution.getPlatform()) {
            case OS_X:
                return format("%s-x86%s.tar.gz",
                        v.asInDownloadPath(),
                        bs == B32 ? "" : "_64");
            case Linux:
                return format("%s-%s.tar.gz",
                        v.asInDownloadPath(),
                        bs == B32 ? "i686" : "x86_64");
            case Windows:
                return format("%s-win%s.zip",
                        v.asInDownloadPath(),
                        bs == B32 ? "32" : "x64");
            default:
                throw new RuntimeException("Not implemented for: " + distribution.getPlatform());
        }
    }
}
